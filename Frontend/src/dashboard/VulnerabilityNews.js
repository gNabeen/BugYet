import React, { useEffect, useState } from 'react';
import {
    List,
    ListItem,
    CircularProgress,
    Box,
    Typography,
    Pagination,
    Input,
    InputAdornment,
    TextField,
    Divider,
} from '@mui/material';
import SearchIcon from '@mui/icons-material/Search';

const VulnerabilityNews = () => {
    const [vulnerabilities, setVulnerabilities] = useState([]);
    const [results, setResults] = useState([]);
    const [loading, setLoading] = useState(true);
    const [page, setPage] = useState(1);
    const [search, setSearch] = useState('');
    const itemsPerPage = 10;

    const sortByDate = (a, b) => new Date(b.dateAdded) - new Date(a.dateAdded);

    const fetchVulnerabilities = async () => {
        setLoading(true);
        try {
            const apiUrl = 'https://bugyet.repl.co/vulnerabilities';
            const response = await fetch(apiUrl);
            const data = await response.json();
            setVulnerabilities(data.vulnerabilities);
            setResults(data.vulnerabilities);
        } catch (error) {
            console.error('Error fetching vulnerabilities:', error);
        } finally {
            setLoading(false);
        }
    };

    useEffect(() => {
        fetchVulnerabilities();
    }, []);

    useEffect(() => {
        const sortedByDate = [...vulnerabilities].sort(sortByDate);
        if (search) {
            const filteredResults = sortedByDate.filter((item) =>
                item.product.toLowerCase().includes(search.toLowerCase())
            );
            setResults(filteredResults);
        } else {
            setResults(sortedByDate);
        }
    }, [vulnerabilities, search]);

    const handlePaginationChange = (event, value) => {
        setPage(value);
    };

    const handleSearchChange = (event) => {
        setSearch(event.target.value);
    };

    const displayedResults = results.slice(
        (page - 1) * itemsPerPage,
        page * itemsPerPage
    );

    return (
        <div>
            <h2>Known Exploited Vulnerabilities</h2>
            <Box sx={{ marginBottom: 2 }}>
                <TextField
                    variant="outlined"
                    size="small"
                    type="search"
                    value={search}
                    onChange={handleSearchChange}
                    fullWidth
                    InputProps={{
                        startAdornment: (
                            <InputAdornment position="start">
                                <SearchIcon />
                            </InputAdornment>
                        ),
                    }}
                    placeholder="Search by product name"
                />
            </Box>
            {loading ? (
                <Box>
                    <div className="flex justify-center items-center">
                        <CircularProgress />
                        <p>Loading vulnerabilities...</p>
                    </div>
                </Box>
            ) : (
                <>
                    <List>
                        {displayedResults.map((vulnerability, index) => (
                            <React.Fragment key={vulnerability.cveID}>
                                <ListItem>
                                    <Box>
                                        <Typography
                                            component="span"
                                            variant="body1"
                                            fontWeight="bold"
                                            onClick={() =>
                                                window.open(
                                                    `https://nvd.nist.gov/vuln/detail/${vulnerability.cveID}`,
                                                    '_blank'
                                                )
                                            }
                                        >
                                            {`${vulnerability.cveID}`}
                                        </Typography>
                                        <Typography
                                            component="p"
                                            variant="body2"
                                            color="text.secondary"
                                        >
                                            <b>Product:</b> {`${vulnerability.product}, `}
                                            <b>Date Added:</b> {`${vulnerability.dateAdded}`}
                                        </Typography>

                                        <Typography component="p" variant="body2">
                                            {vulnerability.shortDescription}
                                        </Typography>
                                    </Box>
                                </ListItem>
                                {index < displayedResults.length - 1 && (
                                    <Divider variant="middle" />
                                )}
                            </React.Fragment>
                        ))}
                    </List>
                        <Box display="flex" justifyContent="center" marginTop={2}>
                            <Pagination
                                count={Math.ceil(results.length / itemsPerPage)}
                                page={page}
                                onChange={handlePaginationChange}
                                shape="rounded"
                            />
                        </Box>
                </>
            )}
        </div>
    );
};
export default VulnerabilityNews;